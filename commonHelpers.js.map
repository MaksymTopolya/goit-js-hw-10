{"version":3,"file":"commonHelpers.js","sources":["../src/js/1-timer.js"],"sourcesContent":["\nimport flatpickr from \"flatpickr\";\nimport \"flatpickr/dist/flatpickr.min.css\";\n\nimport iziToast from \"izitoast\";\nimport \"izitoast/dist/css/iziToast.min.css\";\n\nconst days = document.querySelector(\"[data-days]\")\nconst hours = document.querySelector(\"[data-hours]\")\nconst min = document.querySelector(\"[data-minutes]\")\nconst sec = document.querySelector(\"[data-seconds]\")\n\nconst input = document.getElementById(\"datetime-picker\"); \nconst startBtn = document.querySelector(\"[data-start]\")\nlet userSelectedDate = null\n\nstartBtn.addEventListener(\"click\", handleClick)\n\nfunction closeModal(params) {\n    if (userSelectedDate < Date.now()) {\n        iziToast.show({\n    title: 'Hey',\n    message: 'Please choose a date in the future',\n            theme: 'dark',\n            position: 'topCenter',\n            color: 'black', \n    \n});\n        startBtn.disabled = true; \n    } else {\n        startBtn.disabled = false; \n    }\n\n}\n\n\nfunction handleClick(params) {\n    let interval = setInterval(()=> {\n        let time = Date.now()\n        let needToWait = userSelectedDate - time\n\n        if (needToWait <= 0) {\n            clearInterval(interval)\n        }\n\n        let converted = convertMs(needToWait)\n        days.textContent = addLeadingZero(converted.days)\n        hours.textContent = addLeadingZero(converted.hours)\n        min.textContent = addLeadingZero(converted.minutes)\n        sec.textContent = addLeadingZero(converted.seconds)\n        input.disabled = true\n    },1000)\n   \n}\n\nfunction addLeadingZero(value) {\n    return String(value).padStart(2, '0');\n}\n\nfunction convertMs(ms) {\n  const second = 1000;\n  const minute = second * 60;\n  const hour = minute * 60;\n  const day = hour * 24;\n\n  // Remaining days\n  const days = Math.floor(ms / day);\n  // Remaining hours\n  const hours = Math.floor((ms % day) / hour);\n  // Remaining minutes\n  const minutes = Math.floor(((ms % day) % hour) / minute);\n  // Remaining seconds\n  const seconds = Math.floor((((ms % day) % hour) % minute) / second);\n\n  return { days, hours, minutes, seconds };\n}\n\n\n\n\n\nconst options = {\n  enableTime: true,\n  time_24hr: true,\n  defaultDate: new Date(),\n  minuteIncrement: 1,\n    onClose(selectedDates) {\n        userSelectedDate = selectedDates[0]\n        closeModal()\n    console.log(selectedDates[0]);\n  },\n};\n\nflatpickr(input, options); \n\n"],"names":["days","hours","min","sec","input","startBtn","userSelectedDate","handleClick","closeModal","params","iziToast","interval","time","needToWait","converted","convertMs","addLeadingZero","value","ms","minutes","seconds","options","selectedDates","flatpickr"],"mappings":"2GAOA,MAAMA,EAAO,SAAS,cAAc,aAAa,EAC3CC,EAAQ,SAAS,cAAc,cAAc,EAC7CC,EAAM,SAAS,cAAc,gBAAgB,EAC7CC,EAAM,SAAS,cAAc,gBAAgB,EAE7CC,EAAQ,SAAS,eAAe,iBAAiB,EACjDC,EAAW,SAAS,cAAc,cAAc,EACtD,IAAIC,EAAmB,KAEvBD,EAAS,iBAAiB,QAASE,CAAW,EAE9C,SAASC,EAAWC,EAAQ,CACpBH,EAAmB,KAAK,OACxBI,EAAS,KAAK,CAClB,MAAO,MACP,QAAS,qCACD,MAAO,OACP,SAAU,YACV,MAAO,OAEnB,CAAC,EACOL,EAAS,SAAW,IAEpBA,EAAS,SAAW,EAG5B,CAGA,SAASE,EAAYE,EAAQ,CACzB,IAAIE,EAAW,YAAY,IAAK,CAC5B,IAAIC,EAAO,KAAK,IAAK,EACjBC,EAAaP,EAAmBM,EAEhCC,GAAc,GACd,cAAcF,CAAQ,EAG1B,IAAIG,EAAYC,EAAUF,CAAU,EACpCb,EAAK,YAAcgB,EAAeF,EAAU,IAAI,EAChDb,EAAM,YAAce,EAAeF,EAAU,KAAK,EAClDZ,EAAI,YAAcc,EAAeF,EAAU,OAAO,EAClDX,EAAI,YAAca,EAAeF,EAAU,OAAO,EAClDV,EAAM,SAAW,EACpB,EAAC,GAAI,CAEV,CAEA,SAASY,EAAeC,EAAO,CAC3B,OAAO,OAAOA,CAAK,EAAE,SAAS,EAAG,GAAG,CACxC,CAEA,SAASF,EAAUG,EAAI,CAOrB,MAAMlB,EAAO,KAAK,MAAMkB,EAAK,KAAG,EAE1BjB,EAAQ,KAAK,MAAOiB,EAAK,MAAO,IAAI,EAEpCC,EAAU,KAAK,MAAQD,EAAK,MAAO,KAAQ,GAAM,EAEjDE,EAAU,KAAK,MAASF,EAAK,MAAO,KAAQ,IAAU,GAAM,EAElE,MAAO,CAAE,KAAAlB,EAAM,MAAAC,EAAO,QAAAkB,EAAS,QAAAC,CAAO,CACxC,CAMA,MAAMC,EAAU,CACd,WAAY,GACZ,UAAW,GACX,YAAa,IAAI,KACjB,gBAAiB,EACf,QAAQC,EAAe,CACnBhB,EAAmBgB,EAAc,CAAC,EAClCd,EAAY,EAChB,QAAQ,IAAIc,EAAc,CAAC,CAAC,CAC7B,CACH,EAEAC,EAAUnB,EAAOiB,CAAO"}